// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            Int           @id @default(autoincrement())
  username      String
  chat_id       BigInt        @unique
  baseName      String?
  walletAddress String?
  walletDetails String?
  pin           String?
  transaction   Transaction[]
  session       Session[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  hash        String?
  status      String?
  type        TransactionType
  description String?
  user        User            @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)
  chat_id     BigInt
}

model Session {
  id          Int     @id @default(autoincrement())
  sessionOn   Boolean @default(false)
  airtime     Boolean @default(false)
  sendToken   Boolean @default(false)
  data        Boolean @default(false)
  electricity Boolean @default(false)

  user    User   @relation(fields: [chat_id], references: [chat_id], onDelete: Cascade)
  chat_id BigInt
}

enum TransactionType {
  SEND
  AIRTIME
  DATA
  ELECTRICITY
}
